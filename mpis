#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Manjaro Post Installation Script:
# It allows  users to choose different options such as
# install an application or config some tools and environments.

import sys
import traceback
from core import core


def main():
    try:
        mpisw = core.Mpis()
        core.clear()
        core.banner()
        core.pause()
        core.clear()
        core.help()
        core.pause()
        core.clear()
        option, m_actual = 0, 0
        m_back = []
        print('\033[1;36m' + mpisw.menus[m_actual].title + '\033[1;m')
        for item in mpisw.menus[m_actual].items:
            print('\033[1;36m' + item.option + '.- ' + item.title + '\033[1;m')
        while True:
            option = core.user_input()
            if option in ['b', 'B', 'back', 'Back', 'BACK']:
                m_actual = m_back.pop()
            elif option in ['h', 'H', 'help', 'Help', 'HELP']:
                core.help()
                core.pause()
                core.clear()
            elif option in ['x', 'X', 'exit', 'Exit', 'EXIT']:
                core.clear()
                core.end_message()
                sys.exit(0)
            elif int(option) > 0 <= len(mpisw.menus[m_actual].items) != 0:
                if mpisw.menus[m_actual].items[int(option) - 1].ismenu == \
                        'True':
                    m_back.append(m_actual)
                    nm = core.search_menu(
                         mpisw.menus[m_actual].items[int(option) - 1].name,
                         mpisw.menus)
                    if nm != 0:
                        m_actual = nm
                else:
                    tr = core.search_commands(
                         mpisw.menus[m_actual].items[int(option) - 1].name,
                         mpisw.apps)
                    if tr is None:
                        print(core.errors['0x001'])
                    elif tr.commands[0] == 'help':
                        core.help()
                        core.pause()
                        core.clear()
                    elif tr.commands[0] == 'back':
                        m_actual = m_back.pop()
                    elif tr.commands[0] == 'exit':
                        core.clear()
                        core.end_message()
                        sys.exit(0)
                    elif tr.commands[0] == 'SeeMirrorList':
                        with open('/etc/pacman.d/mirrorlist', 'r') as f:
                            print(f.read())
                        core.pause()
                    elif tr.commands[0] == "unistallPackages":
                        pass
                    else:
                        core.execute_command(tr.commands, tr.sequentially)
            else:
                core.pause(core.messages['msgNOp'])
            core.clear()
            print('\033[1;36m'+mpisw.menus[m_actual].title+'\033[1;m')
            for item in mpisw.menus[m_actual].items:
                print('\033[1;36m'+item.option + '.- ' + item.title+'\033[1;m')
    except KeyboardInterrupt:
        print(core.messages['msgCtrl+C'])
        core.clear()
    except Exception:
        traceback.print_exc(file=sys.stdout)
    sys.exit(0)

if __name__ == '__main__':
    main()
