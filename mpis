#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# This file is part of MPIS (https://github.com/KernelPanicBlog/MPIS).
#
# MPIS(Manjaro Post Installation Script) is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the License,or
# any later version.
#
# MPIS (Manjaro Post Installation Script):
# It allows  users to choose different options such as
# install an application or config some tools and environments.
#
# MPIS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with MPIS; If not, see <http://www.gnu.org/licenses/>.
import traceback
from mpislib.core import *


def main():
    try:
        show_banner()
        pause(get_message("msgNoConfirm"))
        menus = make_menus()
        option = 0
        menu_back = []
        menu = menus.childern[option]
        show_menu(menu)
        while True:
            try:
                option = user_input("Green-2")
                if option in mkopts("back"):
                    if len(menu_back):
                        menu = menu_back.pop()
                elif option in mkopts("help"):
                    show_help(False)
                elif option in mkopts("exit"):
                    end_message()
                elif int(option) <= len(menu.childern):
                    option = int(option)
                    if len(menu[option].childern):
                        menu_back.append(menu)
                        menu = menu.childern[option]
                    else:
                        if menu.name == "Settings ...":
                            pass
                        elif menu.name == "About":
                            if menu.childern[option].name == "About Mpis":
                                show_banner()
                            elif menu.childern[option].name == "Report bug!":
                                pause(get_message("Report Bugs!"))
                            else:
                                cmd_ = get_command(menu, option, "list")
                                execute_command(cmd_)
                        else:
                            cmd_ = get_command(menu, option, "list")
                            execute_command(cmd_)
                else:
                    pause(get_message("msgNOp"))
            except (ValueError, IndexError):
                clear()
                prefix_color, suffix_color = get_color("Red")
                print(get_error("0x003").format(prefix_color, suffix_color))
            clear()
            show_menu(menu)
    except KeyboardInterrupt:
        print(get_message("msgCtrl+C"))
        sleep()
        clear()
    except Exception:
        traceback.print_exc(file=sys.stdout)
    sys.exit(0)

if __name__ == "__main__":
    main()
